(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{193:function(e,t,a){"use strict";a.r(t);var s=a(0),n=Object(s.a)({},function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"snv-calling"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#snv-calling","aria-hidden":"true"}},[e._v("#")]),e._v(" SNV Calling")]),e._v(" "),a("h2",{attrs:{id:"introduction"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#introduction","aria-hidden":"true"}},[e._v("#")]),e._v(" Introduction")]),e._v(" "),a("h3",{attrs:{id:"disovering-a-causative-mutation-in-a-rare-disease-patient"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#disovering-a-causative-mutation-in-a-rare-disease-patient","aria-hidden":"true"}},[e._v("#")]),e._v(" Disovering a Causative Mutation in a Rare Disease Patient")]),e._v(" "),a("p",[e._v("This practical provides an introduction into variant discovery and genotyping. We will cover single-nucleotide variants, short insertions and deletions (InDels) and large structural variants. All data of this practical has been anonomyzed and subsampled to speed up the analyses. We will start with a "),a("a",{attrs:{href:"https://www.ncbi.nlm.nih.gov/pubmed/23999272",target:"_blank",rel:"noopener noreferrer"}},[e._v("rare disease"),a("OutboundLink")],1),e._v(" case that we analyzed in 2012. This infant of consanguineous parents suffered from severe combined immunodeficiency and the details are described in this "),a("a",{attrs:{href:"https://www.ncbi.nlm.nih.gov/pubmed/23561803",target:"_blank",rel:"noopener noreferrer"}},[e._v("publication"),a("OutboundLink")],1),e._v(".")]),e._v(" "),a("h2",{attrs:{id:"reference-indices"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#reference-indices","aria-hidden":"true"}},[e._v("#")]),e._v(" Reference Indices")]),e._v(" "),a("p",[e._v("We will first map the data to the Human reference genome using "),a("a",{attrs:{href:"https://github.com/lh3/bwa",target:"_blank",rel:"noopener noreferrer"}},[e._v("BWA"),a("OutboundLink")],1),e._v(". To speed up the mapping the reference genome needs to be indexed. BWA uses an FM-Index which is built around the "),a("a",{attrs:{href:"https://de.wikipedia.org/wiki/Burrows-Wheeler-Transformation",target:"_blank",rel:"noopener noreferrer"}},[e._v("Burrows-Wheeler transform"),a("OutboundLink")],1),e._v(".")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[e._v("cd")]),e._v(" /data/rd/\nbwa index chr7.fa\n"),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("ls")]),e._v(" -rt1 chr7.fa*\n")])])]),a("p",[e._v("It is also useful to build an index of the FASTA reference file using "),a("a",{attrs:{href:"http://www.htslib.org",target:"_blank",rel:"noopener noreferrer"}},[e._v("SAMtools"),a("OutboundLink")],1),e._v(" to allow a quick extraction of subsequences from the reference genome.")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("samtools faidx chr7.fa\n")])])]),a("p",[e._v("We can now, for instance, extract 50bp from position 10017.")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("samtools faidx chr7.fa chr7:10017-10067\n")])])]),a("p",[a("a",{attrs:{href:"http://bedtools.readthedocs.io/en/latest/",target:"_blank",rel:"noopener noreferrer"}},[e._v("bedtools"),a("OutboundLink")],1),e._v(" can be used to create a simple BED file with the start and end of each chromosome. We could also use the command makewindows to tile each chromosome into 10kbp windows.")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("bedtools makewindows -g "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("cut -f 1,2 chr7.fa.fai"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" -n 1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" chr7.bed\nbedtools nuc -fi chr7.fa -bed chr7.bed\n")])])]),a("p",[a("em",[a("strong",[e._v("Exercises")])])]),e._v(" "),a("ul",[a("li",[e._v("What is the length of chr7?")]),e._v(" "),a("li",[e._v("What is the GC-content of chr7?")]),e._v(" "),a("li",[e._v("What is the proportion of Ns in chr7?")])]),e._v(" "),a("h2",{attrs:{id:"alignment"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#alignment","aria-hidden":"true"}},[e._v("#")]),e._v(" Alignment")]),e._v(" "),a("p",[e._v("Once the index has been built we can map the paired-end "),a("a",{attrs:{href:"https://en.wikipedia.org/wiki/FASTQ_format",target:"_blank",rel:"noopener noreferrer"}},[e._v("FASTQ"),a("OutboundLink")],1),e._v(" data against the reference and convert it to "),a("a",{attrs:{href:"http://www.htslib.org",target:"_blank",rel:"noopener noreferrer"}},[e._v("BAM"),a("OutboundLink")],1),e._v(".")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("bwa mem chr7.fa read1.fq.gz read2.fq.gz "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" samtools view -bT chr7.fa - "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" rd.bam\n")])])]),a("p",[e._v("Using "),a("a",{attrs:{href:"http://www.htslib.org",target:"_blank",rel:"noopener noreferrer"}},[e._v("samtools"),a("OutboundLink")],1),e._v(" we can have a look at the header and the first few alignment records:")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("samtools view -H rd.bam\nsamtools view rd.bam "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("head")]),e._v("\n")])])]),a("p",[e._v("Please familiarize yourself with the "),a("a",{attrs:{href:"http://www.htslib.org",target:"_blank",rel:"noopener noreferrer"}},[e._v("BAM"),a("OutboundLink")],1),e._v(" format, the required fields present in every bam alignment record are explained below:")]),e._v(" "),a("table",[a("thead",[a("tr",[a("th",[e._v("Col")]),e._v(" "),a("th",[e._v("Field")]),e._v(" "),a("th",[e._v("Description")])])]),e._v(" "),a("tbody",[a("tr",[a("td",[e._v("1")]),e._v(" "),a("td",[e._v("QNAME")]),e._v(" "),a("td",[e._v("Query template NAME")])]),e._v(" "),a("tr",[a("td",[e._v("2")]),e._v(" "),a("td",[e._v("FLAG")]),e._v(" "),a("td",[e._v("bitwise FLAG")])]),e._v(" "),a("tr",[a("td",[e._v("3")]),e._v(" "),a("td",[e._v("RNAME")]),e._v(" "),a("td",[e._v("Reference sequence NAME")])]),e._v(" "),a("tr",[a("td",[e._v("4")]),e._v(" "),a("td",[e._v("POS")]),e._v(" "),a("td",[e._v("1-based leftmost mapping POSition")])]),e._v(" "),a("tr",[a("td",[e._v("5")]),e._v(" "),a("td",[e._v("MAPQ")]),e._v(" "),a("td",[e._v("MAPping Quality")])]),e._v(" "),a("tr",[a("td",[e._v("6")]),e._v(" "),a("td",[e._v("CIGAR")]),e._v(" "),a("td",[e._v("CIGAR string")])]),e._v(" "),a("tr",[a("td",[e._v("7")]),e._v(" "),a("td",[e._v("RNEXT")]),e._v(" "),a("td",[e._v("Ref. name of the mate/next read")])]),e._v(" "),a("tr",[a("td",[e._v("8")]),e._v(" "),a("td",[e._v("PNEXT")]),e._v(" "),a("td",[e._v("Position of the mate/next read")])]),e._v(" "),a("tr",[a("td",[e._v("9")]),e._v(" "),a("td",[e._v("TLEN")]),e._v(" "),a("td",[e._v("observed Template LENgth")])]),e._v(" "),a("tr",[a("td",[e._v("10")]),e._v(" "),a("td",[e._v("SEQ")]),e._v(" "),a("td",[e._v("segment SEQuence")])]),e._v(" "),a("tr",[a("td",[e._v("11")]),e._v(" "),a("td",[e._v("QUAL")]),e._v(" "),a("td",[e._v("ASCII of Phred-scaled base QUALity+33")])])])]),e._v(" "),a("p",[e._v("The bitwise FLAG can be decoded using the "),a("a",{attrs:{href:"https://broadinstitute.github.io/picard/explain-flags.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("explain flag tool"),a("OutboundLink")],1),e._v(" from the picard distribution.")]),e._v(" "),a("p",[e._v("We need to sort the alignments and can then also built an index to allow a random extraction of alignments.")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("samtools "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("sort")]),e._v(" -o rd.srt.bam rd.bam\nsamtools index rd.srt.bam\n")])])]),a("h2",{attrs:{id:"mark-duplicates-and-alignment-quality-control"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mark-duplicates-and-alignment-quality-control","aria-hidden":"true"}},[e._v("#")]),e._v(" Mark Duplicates and Alignment Quality Control")]),e._v(" "),a("p",[e._v("Unless you are using a PCR-free library, PCR duplicates are common in DNA-sequencing and should be flagged prior to variant calling.")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("bammarkduplicates I"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("rd.srt.bam O"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("rd.rmdup.bam M"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("rd.metrics.tsv index"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("1 rmdup"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("0\n")])])]),a("p",[e._v("SAMtools flagstat computes some basic alignment statistics such as the number of properly paired reads and singletons.")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("samtools flagstat rd.rmdup.bam\n")])])]),a("p",[a("a",{attrs:{href:"https://github.com/tobiasrausch/alfred",target:"_blank",rel:"noopener noreferrer"}},[e._v("Alfred"),a("OutboundLink")],1),e._v(" can be used to compute the insert size distribution, the coverage distribution and alignment error rates.")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("alfred qc -r chr7.fa rd.rmdup.bam\n")])])]),a("p",[e._v("The output file has multiple sections. Most are data matrices for quality control plots but there is also one section with summary alignment metrics.")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("zcat qc.tsv.gz "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("grep")]),e._v(" ^ME "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" datamash transpose "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" column -t\n")])])]),a("p",[e._v("To create the QC plots we run the Rscript that is part of "),a("a",{attrs:{href:"https://github.com/tobiasrausch/alfred",target:"_blank",rel:"noopener noreferrer"}},[e._v("Alfred"),a("OutboundLink")],1),e._v(".")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("Rscript /opt/alfred/R/stats.R qc.tsv.gz\n")])])]),a("p",[e._v("The output PDF file can then be converted to PNGs.")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("convert qc.tsv.gz.pdf qc.png\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Base content distribution")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("open")]),e._v(" qc-0.png\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Base quality distribution")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("open")]),e._v(" qc-1.png\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Coverage")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("open")]),e._v(" qc-4.png\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Insert size")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("open")]),e._v(" qc-5.png\n")])])]),a("p",[e._v("For calling exonic variants we are primarily interested in the coverage distribution across exons. One could, for instance, use "),a("a",{attrs:{href:"https://www.r-project.org/",target:"_blank",rel:"noopener noreferrer"}},[e._v("R Statistics"),a("OutboundLink")],1),e._v(" to download exon coordinates for hg19 or download coding regions from UCSC or Ensembl. The file exons.bed.gz contains CCDS coding regions for hg19. We have to subset this bed file to the subsequence of chr7 that we are using in this practical.")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("zcat exons.bed.gz "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("head")]),e._v("\nbedtools intersect -a "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("zcat exons.bed.gz"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" -b chr7.bed "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("gzip")]),e._v(" -c "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" exons.chr7.bed.gz\nzcat exons.chr7.bed.gz "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("head")]),e._v("\n")])])]),a("p",[e._v("With the exonic coordinates, "),a("a",{attrs:{href:"https://github.com/tobiasrausch/alfred",target:"_blank",rel:"noopener noreferrer"}},[e._v("Alfred"),a("OutboundLink")],1),e._v(" can be used to compute the avg. coverage per target region. In our case the targets are CCDS exons but the same method can be used to compute on-target rates for exome capture data sets.")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("alfred qc -r chr7.fa -b exons.chr7.bed.gz rd.rmdup.bam\nRscript /opt/alfred/R/stats.R qc.tsv.gz\nconvert qc.tsv.gz.pdf qc.png\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Exon coverage distribution")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("open")]),e._v(" qc-10.png\n")])])]),a("p",[a("em",[a("strong",[e._v("Exercises")])])]),e._v(" "),a("ul",[a("li",[e._v("What is the median coverage of the data set?")]),e._v(" "),a("li",[e._v("What is the meaning of the different library layouts (F+, F-, R+, R-)?")]),e._v(" "),a("li",[e._v("What is the duplicate fraction in the library?")]),e._v(" "),a("li",[e._v("Would it make sense to sequence this library deeper to achieve 30x coverage?")])]),e._v(" "),a("h2",{attrs:{id:"variant-calling"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#variant-calling","aria-hidden":"true"}},[e._v("#")]),e._v(" Variant Calling")]),e._v(" "),a("p",[e._v("Once the alignment is sorted and duplicates are marked we can run a variant caller such as "),a("a",{attrs:{href:"https://github.com/ekg/freebayes",target:"_blank",rel:"noopener noreferrer"}},[e._v("FreeBayes"),a("OutboundLink")],1),e._v(" to scan the alignments for differences compared to the reference.")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("freebayes --fasta-reference chr7.fa -b rd.rmdup.bam -v snv.vcf\n")])])]),a("p",[e._v("Compressing and indexing of the output VCF file will again speed up random access to the file.")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("bgzip snv.vcf\ntabix snv.vcf.gz\n")])])]),a("p",[e._v("The "),a("a",{attrs:{href:"https://samtools.github.io/hts-specs",target:"_blank",rel:"noopener noreferrer"}},[e._v("VCF"),a("OutboundLink")],1),e._v(" format has multiple header lines starting with the hash # sign. Below the header lines is one record for each variant. The record format is described in the below table:")]),e._v(" "),a("table",[a("thead",[a("tr",[a("th",[e._v("Col")]),e._v(" "),a("th",[e._v("Field")]),e._v(" "),a("th",[e._v("Description")])])]),e._v(" "),a("tbody",[a("tr",[a("td",[e._v("1")]),e._v(" "),a("td",[e._v("CHROM")]),e._v(" "),a("td",[e._v("Chromosome name")])]),e._v(" "),a("tr",[a("td",[e._v("2")]),e._v(" "),a("td",[e._v("POS")]),e._v(" "),a("td",[e._v("1-based position. For an indel, this is the position preceding the indel.")])]),e._v(" "),a("tr",[a("td",[e._v("3")]),e._v(" "),a("td",[e._v("ID")]),e._v(" "),a("td",[e._v("Variant identifier. Usually the dbSNP rsID.")])]),e._v(" "),a("tr",[a("td",[e._v("4")]),e._v(" "),a("td",[e._v("REF")]),e._v(" "),a("td",[e._v("Reference sequence at POS involved in the variant. For a SNP, it is a single base.")])]),e._v(" "),a("tr",[a("td",[e._v("5")]),e._v(" "),a("td",[e._v("ALT")]),e._v(" "),a("td",[e._v("Comma delimited list of alternative sequence(s).")])]),e._v(" "),a("tr",[a("td",[e._v("6")]),e._v(" "),a("td",[e._v("QUAL")]),e._v(" "),a("td",[e._v("Phred-scaled probability of all samples being homozygous reference.")])]),e._v(" "),a("tr",[a("td",[e._v("7")]),e._v(" "),a("td",[e._v("FILTER")]),e._v(" "),a("td",[e._v("Semicolon delimited list of filters that the variant fails to pass.")])]),e._v(" "),a("tr",[a("td",[e._v("8")]),e._v(" "),a("td",[e._v("INFO")]),e._v(" "),a("td",[e._v("Semicolon delimited list of variant information.")])]),e._v(" "),a("tr",[a("td",[e._v("9")]),e._v(" "),a("td",[e._v("FORMAT")]),e._v(" "),a("td",[e._v("Colon delimited list of the format of individual genotypes in the following fields.")])]),e._v(" "),a("tr",[a("td",[e._v("10+")]),e._v(" "),a("td",[e._v("Samples")]),e._v(" "),a("td",[e._v("Individual genotype information defined by FORMAT.")])])])]),e._v(" "),a("p",[e._v("You can look at the header of the VCF file using grep, '-A 1' includes the first variant record in the file:")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("bcftools view snv.vcf.gz "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("grep")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"^#"')]),e._v(" -A 1\n")])])]),a("p",[e._v("Using "),a("a",{attrs:{href:"https://samtools.github.io/bcftools/bcftools.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("BCFtools"),a("OutboundLink")],1),e._v(" we can generate some useful summary statistics such as the "),a("a",{attrs:{href:"https://en.wikipedia.org/wiki/Transversion",target:"_blank",rel:"noopener noreferrer"}},[e._v("transition/transversion ratio"),a("OutboundLink")],1),e._v(".")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("bcftools stats snv.vcf.gz "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("grep")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"TSTV"')]),e._v("\n")])])]),a("p",[a("em",[a("strong",[e._v("Exercises")])])]),e._v(" "),a("ul",[a("li",[e._v("How many SNPs have been called (hint: bcftools stats, SN tag)?")]),e._v(" "),a("li",[e._v("How many InDels have been called (hint: bcftools stats, SN tag)?")]),e._v(" "),a("li",[e._v("How many C>T mutations have been called (hint: bcftools stats, ST tag)?")])]),e._v(" "),a("h2",{attrs:{id:"filtering-variants"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#filtering-variants","aria-hidden":"true"}},[e._v("#")]),e._v(" Filtering Variants")]),e._v(" "),a("p",[e._v("In most applications researchers use external ground truth data to calibrate a variant calling pipeline. In our case we do not know the ground truth so we will illustrate some filtering options based on summary statistics such as the transition/transversion ratio. In most species, transitions are far more likely than transversions and for humans we would expect a transition/transversion ratio of approximately 2.")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("bcftools stats snv.vcf.gz "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("grep")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"TSTV"')]),e._v("\nbcftools filter -i "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v("'%QUAL>20'")]),e._v(" snv.vcf.gz  "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" bcftools stats "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("grep")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"TSTV"')]),e._v("\nbcftools filter -e "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v("'%QUAL<=20 || %QUAL/INFO/AO<=2 || SAF<=2 || SAR<=2'")]),e._v(" snv.vcf.gz  "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" bcftools stats "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("grep")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"TSTV"')]),e._v("\n")])])]),a("p",[e._v("Another useful bulk metric is the length of indels in exons because most InDel polymorphisms should be in-frame. If you perform variant calling on a large population cohort with hundreds of samples of different ancestry then "),a("a",{attrs:{href:"https://en.wikipedia.org/wiki/Zygosity",target:"_blank",rel:"noopener noreferrer"}},[e._v("heterozygosity"),a("OutboundLink")],1),e._v(" is another metric that could be useful. For our single sample case study we move on with a simple threshold based filtering strategy to subset the VCF to exonic variants.")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("bcftools filter -O z -o exon.vcf.gz -R "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("zcat exons.bed.gz"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" -e "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v("'%QUAL<=20 || %QUAL/INFO/AO<=2 || SAF<=2 || SAR<=2'")]),e._v(" snv.vcf.gz\nbcftools stats exon.vcf.gz "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("egrep")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"^SN|TSTV"')]),e._v("\n")])])]),a("p",[a("a",{attrs:{href:"http://www.htslib.org",target:"_blank",rel:"noopener noreferrer"}},[e._v("SAMtools"),a("OutboundLink")],1),e._v(" also includes a basic alignment viewer called tview that is useful to spot-check variants in the raw alignment data. For instance, to view the alignment data for the first two exonic variants:")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("bcftools view exon.vcf.gz "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("grep")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"^#"')]),e._v(" -A 2\nsamtools tview -d t -p chr7:299825 rd.rmdup.bam chr7.fa\n")])])]),a("p",[a("em",[a("strong",[e._v("Exercises")])])]),e._v(" "),a("ul",[a("li",[e._v("Are the first two exonic variants homozygous or heterozygous?")]),e._v(" "),a("li",[e._v("What is the genotype and the allelic depth for both variants that FreeBayes emits?")]),e._v(" "),a("li",[e._v("Spot-check some heterozygous variants using samtools tview.")]),e._v(" "),a("li",[e._v("Plot the InDel length distribution of all called InDels (hint: bcftools stats, IDD tag).")])]),e._v(" "),a("h2",{attrs:{id:"variant-annotation"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#variant-annotation","aria-hidden":"true"}},[e._v("#")]),e._v(" Variant Annotation")]),e._v(" "),a("p",[e._v("Variant annotation and classification is a challenging process.")]),e._v(" "),a("ul",[a("li",[e._v("you can use transcript annotations from Ensembl, UCSC or RefSeq")]),e._v(" "),a("li",[e._v("there is a long list of mutation damaging prediction tools such as PolyPhen, MutationTaster or Sift")]),e._v(" "),a("li",[e._v("you can annotate variants with allele frequency information from variation archives such as 1000 Genomes, ExAC or gnomAD")]),e._v(" "),a("li",[e._v("you can check the expression of genes in your studied tissue using GTEx")]),e._v(" "),a("li",[e._v("you can prioritize mutations in genes that interact with known candidate genes of the disease")]),e._v(" "),a("li",[e._v("you can categorize known mutations into benign and pathogenic using ClinVar")])]),e._v(" "),a("p",[e._v("In the recent years a number of convenient pipelines have been developed that ease the annotation of variants with some of the above information. In this practical we will use "),a("a",{attrs:{href:"http://www.ensembl.org/info/docs/tools/vep/index.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("VEP"),a("OutboundLink")],1),e._v(" because it can be run directly online. We first dump all SNPs in a VEP compliant format which you can\nthen copy and paste into the VEP application. Make sure you use the hg19/GRCh37 version available "),a("a",{attrs:{href:"http://grch37.ensembl.org/Homo_sapiens/Tools/VEP",target:"_blank",rel:"noopener noreferrer"}},[e._v("here"),a("OutboundLink")],1),e._v(".")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("bcftools query -f "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"%CHROM\\t%POS\\t%ID\\t%REF\\t%ALT\\n"')]),e._v(" exon.vcf.gz\n")])])]),a("p",[e._v("A working variant annotation and classification pipeline can easily reduce an initial call set of several thousands of exonic variants to a handful mutation candidates. In a rare disease setting additional power can be gained by taking advantage of the suspected inheritance model (autosomal recessive, autosomal dominant, etc.).")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("bcftools query -f "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"%CHROM\\t%POS\\t%ID\\t%REF\\t%ALT\\t[%GT]\\n"')]),e._v(" exon.vcf.gz\n")])])]),a("p",[a("em",[a("strong",[e._v("Exercises")])])]),e._v(" "),a("ul",[a("li",[e._v("What would be a useful additional filter in our case given that the index patient has consanguineous parents?")]),e._v(" "),a("li",[e._v("How could we use variation archives to further filter the list of exonic variants?")]),e._v(" "),a("li",[e._v("Which annotation features could be used to rank the mutation list for a clinician?")])]),e._v(" "),a("h2",{attrs:{id:"variant-validation"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#variant-validation","aria-hidden":"true"}},[e._v("#")]),e._v(" Variant Validation")]),e._v(" "),a("p",[e._v("Once a putative causative variant has been identified these are usually validated in the index patient using PCR and Sanger sequencing. If a specific inheritance model is suspected the parents are also tested. For the likely causative variant we will design primers using "),a("a",{attrs:{href:"https://www.ncbi.nlm.nih.gov/pubmed/17485472",target:"_blank",rel:"noopener noreferrer"}},[e._v("Primer3Plus"),a("OutboundLink")],1),e._v(". These primers are locally unique and have the appropriate Tm but they are not necessarily unique in the entire genome. We can use "),a("a",{attrs:{href:"https://gear.embl.de/silica",target:"_blank",rel:"noopener noreferrer"}},[e._v("Silica"),a("OutboundLink")],1),e._v(", a tool for "),a("a",{attrs:{href:"https://en.wikipedia.org/wiki/In_silico_PCR",target:"_blank",rel:"noopener noreferrer"}},[e._v("In-silico PCR"),a("OutboundLink")],1),e._v(", to check genome-wide uniqueness. Both methods, Primer3Plus and Silica, are combined in "),a("a",{attrs:{href:"https://gear.embl.de/verdin",target:"_blank",rel:"noopener noreferrer"}},[e._v("Verdin"),a("OutboundLink")],1),e._v(" to automatically design primers for short variants and large structural variants. The example shows how SNVs, InDels and SVs are encoded and then you can design primers for the likely causative SNV. We do not have the time to run the actual PCR experiment and sequence the breakpoint mutation but the Sanger validation files of the original study are in the data folder.")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[e._v("ls")]),e._v(" *.ab1\n")])])]),a("p",[e._v("You can analyze these trace files using "),a("a",{attrs:{href:"https://gear.embl.de/indigo",target:"_blank",rel:"noopener noreferrer"}},[e._v("Indigo"),a("OutboundLink")],1),e._v(". Indigo is primarily for discovering InDels in Sanger traces but it also aligns the trace file to the reference genome so we can use it to compare the alignments and traces of the index patient to her parents. The files are patient.ab1, mother.ab1 and father.ab1. For your convenience, a screenshot of the sanger traces is provided in sanger.png.")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[e._v("open")]),e._v(" sanger.png\n")])])]),a("p",[e._v("You can of course also spot-check this variant in the raw alignment.")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("samtools tview -d t -p chr7:2954850 rd.rmdup.bam chr7.fa\n")])])]),a("p",[a("em",[a("strong",[e._v("Exercises")])])]),e._v(" "),a("ul",[a("li",[e._v("Why should we not put the primers directly next to the mutation?")]),e._v(" "),a("li",[e._v("Why did we not select primers more than 1000bp away from the mutation?")]),e._v(" "),a("li",[e._v("Is the gene of interest on the forward or reverse strand?")]),e._v(" "),a("li",[e._v("Does the candidate gene make sense for a patient with severe immunodeficiency?")]),e._v(" "),a("li",[e._v("Does the candidate gene interact with NFKB1?")]),e._v(" "),a("li",[e._v("Can you spot the mutation in the traces and the alignment against the reference?")]),e._v(" "),a("li",[e._v("What is the validated genotype by Sanger sequencing of the mother, father and patient for the mutation?")])])])},[],!1,null,null,null);t.default=n.exports}}]);